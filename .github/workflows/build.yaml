# .github/workflows/build.yml
name: Build

on:
    push:
        tags:
            - "v*"

    workflow_dispatch:
        inputs:
            tag:
                description: "Tag to release"
                required: true
                default: "v0.1.0"

jobs:
    build:
        name: build ${{ matrix.target }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - target: x86_64-pc-windows-msvc
                      os: windows-latest
                    # - target: i686-pc-windows-gnu  # error: linker `i686-w64-mingw32-gcc` not found
                    #   os: windows-latest
                    #   archive: zip
                    #   - target: x86_64-apple-darwin
                    #     os: macos-latest
                    #     archive: zip
                    #   - target: aarch64-apple-darwin
                    #     os: macos-latest
                    #     archive: zip
                    #   - target: aarch64-unknown-linux-musl
                    #     os: ubuntu-latest
                    #     archive: tar.gz tar.xz tar.zst
                    # - target: arch64-unknown-linux-musl
                    #   archive: tar.gz tar.xz tar.zst
                    # - target: x86_64-unknown-linux-musl
                    #   os: ubuntu-latest
                    #   archive: tar.gz tar.xz tar.zst
                    - target: x86_64-unknown-linux-gnu
                      os: ubuntu-latest
                #   - target: arm-unknown-linux-musleabi
                #     os: ubuntu-latest
                #     archive: tar.gz tar.xz tar.zst
                #   - target: arm-unknown-linux-musleabihf
                #     os: ubuntu-latest
                #     archive: tar.gz tar.xz tar.zst
                # - target: mips-unknown-linux-musl
                #   archive: tar.gz tar.xz tar.zst
                # - target: mips-unknown-linux-musl
                #   archive: tar.gz tar.xz tar.zst
                # - target: mips64-unknown-linux-muslabi64
                #   archive: tar.gz tar.xz tar.zst
                # - target: x86_64-unknown-freebsd
                #   os: ubuntu-latest
                #   archive: tar.gz tar.xz tar.zst

        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }}

            - name: Install Rust Toolchain Components
              uses: dtolnay/rust-toolchain@stable
              with:
                  toolchain: stable
                  target: ${{ matrix.target }}

            - name: Build
              run: |
                  cargo build --release --target ${{ matrix.target }}

            - name: Publish release Windows
              uses: softprops/action-gh-release@v2
              if: ${{ contains(matrix.target, 'windows') }}
              with:
                  draft: false
                  tag_name: ${{ github.ref_name }}
                  files: |
                      target/${{ matrix.target }}/release/ckdownloader.exe
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish release
              uses: softprops/action-gh-release@v2
              if: ${{ !contains(matrix.target, 'windows') }}
              with:
                  draft: false
                  tag_name: ${{ github.ref_name }}
                  files: |
                      target/${{ matrix.target }}/release/ckdownloader
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
